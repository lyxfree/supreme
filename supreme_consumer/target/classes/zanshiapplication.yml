server:
  port: 18082
spring:
  application:
    name: supreme-consumer #服务名字
#指定 eureka 服务地址
eureka:
  client:
    service-url:
      # EurekaServer 的地址
      defaultZone: http://localhost:7001/eureka
# 修改服务地址轮询策略，默认是轮询，配置之后变随机
supreme-provider:
  ribbon:
    #轮询
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
    #随机算法
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
    #重试算法,该算法先按照轮询的策略获取服务,如果获取服务失败则在指定的时间内会进行重试，获取可用的服务
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule
    #加权法,会根据平均响应时间计算所有服务的权重，响应时间越快服务权重越大被选中的概率越大。刚启动时如果同统计信息不足，则使用轮询的策略，等统计信息足够会切换到自身规则。
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.ZoneAvoidanceRule
# 配置熔断策略：
hystrix:
    command:
      default:
        circuitBreaker:
          # 强制打开熔断器 默认 false 关闭的。测试配置是否生效
          forceOpen: false
          # 触发熔断错误比例阈值，默认值 50%
          errorThresholdPercentage: 50
          # 熔断后休眠时长，默认值 5 秒
          sleepWindowInMilliseconds: 10000
          # 熔断触发最小请求次数，默认值是 20
          requestVolumeThreshold: 10
        execution:
          isolation:
            thread:
            # 熔断超时设置，默认为 1 秒
              timeoutInMilliseconds: 2000
feign:
  hystrix:
    enabled: true # 开启Feign的熔断功能
  compression:
    request:
      enabled: true # 开启请求压缩
      mime-types: text/html,application/xml,application/json # 设置压缩的数据类型
      min-request-size: 2048 # 设置触发压缩的大小下限
        #以上数据类型，压缩大小下限均为默认值
    response:
      enabled: true # 开启响应压缩
  #配置普通日志级别
logging:
  level:
    com.objcom.supreme: debug
